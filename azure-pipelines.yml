# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

pool:
  vmImage: ubuntu-latest

schedules:
- cron: '0 0 * * *'
  displayName: Daily midnight build
  branches:
    include:
    - main
    - releases/*
    exclude:
    - releases/ancient/*
- cron: '0 12 * * 0'
  displayName: Weekly Sunday build
  branches:
    include:
    - releases/*
  always: true

stages:
- stage: Build
  displayName: Build stage
  jobs:  
  - job: Build
    displayName: Build job
    steps:
    - script: | 
        echo Hello, world !! 
        echo Replace me with your build steps
      displayName: 'Build'
    - powershell: Write-Host "Run unit tests for your application."        
      displayName: 'Unit Testing'
    
    - powershell: gci env:* | sort-object name | Format-Table -AutoSize | Out-File $env:BUILD_ARTIFACTSTAGINGDIRECTORY/environment-variables.txt

    - task: PublishBuildArtifacts@1
      inputs:
        pathToPublish: '$(Build.ArtifactStagingDirectory)'
        artifactName: drop   
    
    - task: DownloadBuildArtifacts@0
      inputs:
        buildType: 'current'
        downloadType: 'single'
        artifactName: 'drop'
        downloadPath: '$(System.ArtifactsDirectory)'

    - task: NodeTool@0
      displayName: Node install
      inputs:
        versionSpec: '12.x' # The version we're installing
    # Write the installed version to the command line
    - script: which node
        
- stage: Deploy
  displayName: Deploy stage
  jobs:
  - deployment: deploy
    displayName: Deploy job
    environment: 'myFirstEnvironment'
    strategy:
      runOnce:
        deploy:
          steps:
          - script: dir $(Pipeline.Workspace)
            displayName: List Artifact Contents
          - powershell: Write-Host "run your deployment steps"
            displayName: Run Deployment